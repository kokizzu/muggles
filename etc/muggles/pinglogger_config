## a bash source file used by pinglogger

#########################
## start of configurables

path_to_showcurrent="/usr/lib/cgi-bin/showcurrent.cgi"

number_of_hops_upstream=2
## hops upstream in that direction to fix what ip to ping. 2 to 4 hops is a good number for nearness.

## where to log
near_pings_log="/var/log/muggles/near_pings.log"
remote_pings_log="/var/log/muggles/remote_pings.log"

ping_timeout=5 ;  ping_interval=2 ;  ping_count=10
#ping_timeout=1 ;  ping_interval=1 ;  ping_count=1


## a list of remote (far) sites to ping per interface

remotepinguplink1=209.131.36.159
remotepingname1="yahoo.com"

remotepinguplink2=74.125.45.100
remotepingname2="google.com"


## end of configurables
########################


## generate list of near sites to ping per interface
## gives us nearip1, nearip2...

NUMBER_OF_UPLINKS=`ip link show | sed -e 's/[0-9][0-9]*: eth\([0-9][0-9]*\): <BROADCAST,MULTICAST,UP,LOWER_UP>.*/\1/' -e '$!{h;d;}' -e x`

for i in `seq 1 $NUMBER_OF_UPLINKS`
do
  interfaceip=`ip -4 -o addr show dev eth${i} | sed -n 's/^.*inet \(.*\)\/.*$/\1/p'`

  remotepinguplink=`eval echo '$remotepinguplink'${i}`
  nearip=(`mtr -4 -a $interfaceip --no-dns -c1 -r $remotepinguplink |  grep -m$number_of_hops_upstream -o "[[:digit:]]\{1,3\}\.[[:digit:]]\{1,3\}\.[[:digit:]]\{1,3\}\.[[:digit:]]\{1,3\}" | tail -n1`)
  ## grep -m<N> means N hops (resolved ones) upstream

  eval `echo nearip${i}=$nearip`
done


